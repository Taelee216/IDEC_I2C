$date
	Mon Feb 20 17:26:12 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module I2C_Master_TB $end
$var wire 1 ! SDA_out $end
$var wire 1 " SCL_out $end
$var reg 8 # Data_in [7:0] $end
$var reg 7 $ Dev_addr [6:0] $end
$var reg 1 % RW_sel $end
$var reg 8 & Reg_addr [7:0] $end
$var reg 1 ' SDA_in $end
$var reg 1 ( clk $end
$var reg 1 ) rst $end
$scope module u0 $end
$var wire 8 * Data_in [7:0] $end
$var wire 7 + Dev_addr [6:0] $end
$var wire 1 % RW_sel $end
$var wire 8 , Reg_addr [7:0] $end
$var wire 1 - SCL $end
$var wire 1 ' SDA_in $end
$var wire 1 ( clk $end
$var wire 1 ) rst $end
$var wire 1 . SDA $end
$var parameter 4 / STATE_ACK_DATA $end
$var parameter 4 0 STATE_ACK_REG $end
$var parameter 4 1 STATE_ACK_W $end
$var parameter 4 2 STATE_DEV_SEL $end
$var parameter 4 3 STATE_IDLE $end
$var parameter 4 4 STATE_NACK $end
$var parameter 4 5 STATE_READ $end
$var parameter 4 6 STATE_REG_SEL $end
$var parameter 4 7 STATE_RESTART $end
$var parameter 4 8 STATE_RW $end
$var parameter 4 9 STATE_START $end
$var parameter 4 : STATE_STOP $end
$var parameter 4 ; STATE_WRITE $end
$var reg 1 " SCL_out $end
$var reg 1 ! SDA_out $end
$var reg 4 < bit_count [3:0] $end
$var reg 8 = count [7:0] $end
$var reg 4 > next_state [3:0] $end
$var reg 4 ? state [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 ;
b1011 :
b1 9
b11 8
b1100 7
b101 6
b111 5
b1010 4
b0 3
b10 2
b100 1
b110 0
b1001 /
$end
#0
$dumpvars
b0 ?
b0 >
bx =
b0 <
x.
x-
b11010101 ,
b1010101 +
b1010101 *
0)
0(
0'
b11010101 &
1%
b1010101 $
b1010101 #
x"
x!
$end
#1
1.
1!
b11111 =
1-
1"
1(
#2
0(
#3
1(
#4
0(
#5
1(
#6
0(
#7
1(
#8
0(
#9
b1 ?
b11110 =
b10 >
1(
1)
#10
0(
#11
b11101 =
b111 <
0.
0!
b10 ?
1(
#12
0(
#13
1.
1!
b11100 =
0-
0"
b110 <
1(
#14
0(
#15
1-
1"
b11011 =
0.
0!
b101 <
1(
#16
0(
#17
1.
1!
b11010 =
0-
0"
b100 <
1(
#18
0(
#19
1-
1"
b11001 =
0.
0!
b11 <
1(
#20
0(
#21
1.
1!
b11000 =
0-
0"
b10 <
1(
#22
0(
#23
1-
1"
b10111 =
0.
0!
b1 <
1(
#24
0(
#25
b11 >
1.
1!
b10110 =
0-
0"
b0 <
1(
#26
0(
#27
b100 >
1-
1"
b10101 =
b11 ?
b1111 <
1(
#28
0(
#29
b101 >
b100 ?
0.
0!
b10100 =
0-
0"
1(
#30
0(
#31
1-
1"
b10011 =
b1000 <
b101 ?
1(
#32
0(
#33
1.
1!
b10010 =
0-
0"
b111 <
1(
#34
0(
#35
1-
1"
b10001 =
b110 <
1(
#36
0(
#37
0.
0!
b10000 =
0-
0"
b101 <
1(
#38
0(
#39
1-
1"
b1111 =
1.
1!
b100 <
1(
#40
0(
#41
0.
0!
b1110 =
0-
0"
b11 <
1(
#42
0(
#43
1-
1"
b1101 =
1.
1!
b10 <
1(
#44
0(
#45
b110 >
0.
0!
b1100 =
0-
0"
b1 <
1(
#46
0(
#47
b1100 >
1-
1"
b1011 =
1.
1!
b110 ?
b0 <
1(
#48
0(
#49
b10 >
b1100 ?
0.
0!
b1010 =
0-
0"
1(
#50
0(
#51
1-
1"
b10011 =
b111 <
b10 ?
1(
#52
0(
#53
1.
1!
b10010 =
0-
0"
b110 <
1(
#54
0(
#55
1-
1"
b10001 =
0.
0!
b101 <
1(
#56
0(
#57
1.
1!
b10000 =
0-
0"
b100 <
1(
#58
0(
#59
1-
1"
b1111 =
0.
0!
b11 <
1(
#60
0(
#61
1.
1!
b1110 =
0-
0"
b10 <
1(
#62
0(
#63
b11 >
1-
1"
b1101 =
0.
0!
b1 <
1(
#64
0(
#65
b100 >
b11 ?
1.
1!
b1100 =
0-
0"
b0 <
1(
#66
0(
#67
b111 >
1-
1"
b1011 =
b100 ?
1(
#68
0(
#69
b111 ?
b1000 <
0.
0!
b1010 =
0-
0"
1(
#70
0(
#71
1-
1"
b1001 =
b111 <
1(
#72
0(
#73
b110 <
b1000 =
0-
0"
1(
#74
0(
#75
1-
1"
b111 =
b101 <
1(
#76
0(
#77
b100 <
b110 =
0-
0"
1(
#78
0(
#79
1-
1"
b101 =
b11 <
1(
#80
0(
#81
b10 <
b100 =
0-
0"
1(
#82
0(
#83
b1010 >
1-
1"
b11 =
b1 <
1(
#84
0(
#85
b1011 >
b1010 ?
b0 <
b10 =
0-
0"
1(
#86
0(
#87
b0 >
1-
1"
b1 =
1.
1!
b1011 ?
1(
#88
0(
#89
b1 >
b0 ?
b0 =
0-
0"
1(
#90
0(
#91
b10 >
b11111 =
1-
1"
b1 ?
1(
#92
0(
#93
b10 ?
b111 <
0.
0!
b11110 =
1(
#94
0(
#95
0-
0"
b11101 =
1.
1!
b110 <
1(
#96
0(
#97
0.
0!
b11100 =
1-
1"
b101 <
1(
#98
0(
#99
0-
0"
b11011 =
1.
1!
b100 <
1(
#100
0(
